{"version":3,"sources":["logo.svg","components/User.js","components/FilterProjectForm.js","components/ProjectForm.js","components/Project.js","components/TodoItem.js","components/TodoList.js","components/Footer.js","components/NotFound.js","components/ProjectTodos.js","components/LoginForm.js","components/TodoForm.js","components/ProjectUpdateForm.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","username","email","first_name","last_name","UserList","users","map","FilterProjectForm","props","state","name","event","this","setState","target","value","filterProject","preventDefault","onSubmit","handleSubmit","className","htmlFor","type","onChange","handleChange","React","Component","ProjectForm","repo_link","selectedOptions","i","length","push","item","createProject","multiple","handleProjectChange","id","ProjectItem","project","deleteProject","to","pathname","user_id","find","onClick","ProjectList","projects","FilteredProjectList","TodoItem","todo","deleteTodo","caption","text","created","updated","author","TodoList","todos","Footer","NotFound","ProjectTodosList","useParams","filtered_todos","filter","LoginForm","login","password","get_auth_data","method","placeholder","TodoForm","createTodo","ProjectUpdateForm","selected_project","match","params","updateProject","selected","includes","App","token","user_name","cookies","Cookies","set","load_data","set_auth_data","get","axios","post","then","response","data","catch","error","alert","headers","is_auth","get_auth_data_from_storage","get_headers","console","log","put","delete","logout","exact","path","component","User","ProjectTodos","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,I,qCCGTA,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACI,+BACI,6BAAMA,EAAKC,WACX,6BAAMD,EAAKE,QACX,6BAAMF,EAAKG,aACX,6BAAMH,EAAKI,gBAiBRC,EAbE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEf,OACI,kCACI,6CACA,yCACA,8CACA,6CACCA,EAAMC,KAAI,SAACP,GAAD,OAAU,cAAE,EAAF,CAAWA,KAAQA,W,uBCqBrCQ,E,kDArCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IAHK,E,gDAOnB,SAAaC,GACTC,KAAKC,SAAL,eAESF,EAAMG,OAAOJ,KAAOC,EAAMG,OAAOC,U,0BAK9C,SAAaJ,GACTC,KAAKJ,MAAMQ,cAAcJ,KAAKH,MAAMC,MACpCC,EAAMM,mB,oBAGV,WAAU,IAAD,OACL,OACI,8BACI,uBAAMC,SAAU,SAACP,GAAD,OAAW,EAAKQ,aAAaR,IAA7C,UACI,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOF,UAAU,eAAeV,KAAK,OAAOK,MAAOH,KAAKH,MAAMC,KACnEa,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,SAElD,uBAAOW,KAAK,SAASP,MAAM,oB,GA9BfU,IAAMC,WC8DvBC,E,kDA9DX,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNX,KAAM,GACN6B,UAAW,IALA,E,gDASnB,SAAajB,GACTC,KAAKC,SAAL,eAESF,EAAMG,OAAOJ,KAAOC,EAAMG,OAAOC,U,iCAI9C,SAAoBJ,GAChB,GAAKA,EAAMG,OAAOe,gBAAlB,CAOA,IAHA,IAAIxB,EAAQ,GAGHyB,EAAI,EAAGA,EAAInB,EAAMG,OAAOe,gBAAgBE,OAAQD,IACrDzB,EAAM2B,KAAKrB,EAAMG,OAAOe,gBAAgBI,KAAKH,GAAGf,OAEpDH,KAAKC,SAAS,CAAC,KAAQR,SATnBO,KAAKC,SAAS,CAAC,KAAQ,O,0BAY/B,SAAaF,GACTC,KAAKJ,MAAM0B,cAActB,KAAKH,MAAMC,KAAME,KAAKH,MAAMV,KAAMa,KAAKH,MAAMmB,WACtEjB,EAAMM,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACP,GAAD,OAAW,EAAKQ,aAAaR,IAA7C,UACI,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,kBACA,uBAAOC,KAAK,OAAOF,UAAU,eAAeV,KAAK,OAAOK,MAAOH,KAAKH,MAAMC,KACnEa,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,SAGlD,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,wBAAQX,KAAK,OAAOyB,UAAQ,EAACZ,SAAU,SAACZ,GAAD,OAAW,EAAKyB,oBAAoBzB,IAA3E,SACKC,KAAKJ,MAAMH,MAAMC,KAAI,SAAC2B,GAAD,OAAU,wBAAQlB,MAAOkB,EAAKI,GAApB,SAAyBJ,EAAKjC,mBAItE,sBAAKoB,UAAU,aAAf,UACI,uBAAOC,QAAQ,YAAf,kBACA,uBAAOC,KAAK,OAAOF,UAAU,eAAeV,KAAK,YAAYK,MAAOH,KAAKH,MAAMmB,UACxEL,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,SAElD,uBAAOW,KAAK,SAASP,MAAM,gB,GAzDjBU,IAAMC,WCI1BY,EAAc,SAAC,GAAqC,IAApCjC,EAAmC,EAAnCA,MAAOkC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAClC,OACI,+BACI,6BACI,eAAC,IAAD,CAAMC,GAAI,CAACC,SAAS,YAAD,OAAaH,EAAQF,KAAxC,cAAiDE,EAAQ7B,KAAzD,SAEJ,6BAAK6B,EAAQxC,KAAKO,KAAI,SAACqC,GAAa,OAAOtC,EAAMuC,MAAK,SAAC7C,GAAD,OAAUA,EAAKsC,IAAMM,KAAS3C,cACpF,6BAAKuC,EAAQX,YACb,6BACI,wBAAQiB,QAAS,kBAAML,EAAcD,EAAQF,KAAKf,KAAK,SAAvD,sBAEJ,6BACI,cAAC,IAAD,CAAMmB,GAAI,CAACC,SAAS,oBAAD,OAAqBH,EAAQF,KAAhD,0BAKVS,EAAc,SAAC,GAAsC,IAArCzC,EAAoC,EAApCA,MAAO0C,EAA6B,EAA7BA,SAAUP,EAAmB,EAAnBA,cAEnC,OACI,gCACI,kCACI,+CACA,uCACA,uCACA,uBACCO,EAASzC,KAAI,SAACiC,GAAD,OAAa,cAAC,EAAD,CAAclC,MAAOA,EAAOkC,QAASA,EACxBC,cAAeA,UAE3D,cAAC,IAAD,CAAMC,GAAG,mBAAT,wBAgBGO,EAVa,SAAC,GAAqD,IAApD3C,EAAmD,EAAnDA,MAAO0C,EAA4C,EAA5CA,SAAUP,EAAkC,EAAlCA,cAAexB,EAAmB,EAAnBA,cAE1D,OACI,gCACI,cAAC,EAAD,CAAmBA,cAAe,SAACN,GAAD,OAAUM,EAAcN,MAC1D,cAAC,EAAD,CAAaL,MAAOA,EAAO0C,SAAUA,EAAUP,cAAeA,QCzB3DS,EApBE,SAAC,GAAyC,IAAxC5C,EAAuC,EAAvCA,MAAO0C,EAAgC,EAAhCA,SAAUG,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WACtC,OACI,+BACI,6BAAKD,EAAKE,UACV,6BAAKF,EAAKG,OACV,6BAAKN,EAASH,MAAK,SAACL,GAAD,OAAaA,EAAQF,IAAMa,EAAKX,WAAS7B,OAC5D,6BAAKwC,EAAKI,UACV,6BAAKJ,EAAKK,UACV,6BAAKlD,EAAMuC,MAAK,SAAC7C,GAAD,OAAUA,EAAKsC,IAAMa,EAAKM,UAAQxD,WAClD,6BAAKkD,EAAKzC,QACV,6BACqB,QAAfyC,EAAKzC,OACH,wBAAQoC,QAAS,kBAAMM,EAAWD,EAAKb,KAAKf,KAAK,SAAjD,0BCYLmC,EApBE,SAAC,GAA0C,IAAzCpD,EAAwC,EAAxCA,MAAO0C,EAAiC,EAAjCA,SAAUW,EAAuB,EAAvBA,MAAOP,EAAgB,EAAhBA,WAEvC,OACI,gCACI,kCACI,0CACA,uCACA,0CACA,gDACA,8CACA,yCACA,wCACA,uBACCO,EAAMpD,KAAI,SAAC4C,GAAD,OAAU,cAAC,EAAD,CAAU7C,MAAOA,EAAO0C,SAAUA,EAAUG,KAAMA,EAAMC,WAAYA,UAE7F,cAAC,IAAD,CAAMV,GAAG,gBAAT,wBCVGkB,EARC,SAAC,GACb,OADqB,eAEjB,6BACI,uI,OCGGC,EARE,SAAC,GACd,OADsB,eAElB,8BACI,6ICqBGC,EApBU,SAAC,GAA0C,IAAzCxD,EAAwC,EAAxCA,MAAO0C,EAAiC,EAAjCA,SAAUW,EAAuB,EAAvBA,MAAOP,EAAgB,EAAhBA,WAE1Cd,EAAMyB,cAANzB,GACD0B,EAAiBL,EAAMM,QAAO,SAAAd,GAAI,OAAIA,EAAKX,SAAWF,KAC1D,OACI,kCACI,0CACA,uCACA,0CAEA,gDACA,8CACA,yCACA,wCACC0B,EAAezD,KAAI,SAAC4C,GAAD,OAAU,cAAC,EAAD,CAAW7C,MAAOA,EAAO0C,SAAUA,EAAUG,KAAMA,EAAMC,WAAYA,WCqBhGc,E,kDArCX,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTyD,MAAO,GACPC,SAAU,IAJC,E,gDAQnB,SAAaxD,GACTC,KAAKC,SAAL,eAESF,EAAMG,OAAOJ,KAAOC,EAAMG,OAAOC,U,0BAK9C,SAAaJ,GAETC,KAAKJ,MAAM4D,cAAcxD,KAAKH,MAAMyD,MAAOtD,KAAKH,MAAM0D,UACtDxD,EAAMM,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACP,GAAD,OAAW,EAAKQ,aAAaR,IAAQ0D,OAAO,OAA5D,UACI,uBAAO/C,KAAK,OAAOZ,KAAK,QAAQ4D,YAAY,QAAQvD,MAAOH,KAAKH,MAAMyD,MAC/D3C,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,MAC9C,uBAAOW,KAAK,WAAWZ,KAAK,WAAW4D,YAAY,WAAWvD,MAAOH,KAAKH,MAAM0D,SACzE5C,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,MAC9C,uBAAOW,KAAK,SAASP,MAAM,iB,GA9BnBU,IAAMC,WC6Df6C,E,kDA3DX,WAAY/D,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT2C,QAAS,GACTI,OAAQhD,EAAMH,MAAM,GAAGgC,GACvBgB,KAAM,GACNd,QAAS/B,EAAMuC,SAAS,GAAGV,IANhB,E,gDAUnB,SAAa1B,GAETC,KAAKC,SAAL,eAESF,EAAMG,OAAOJ,KAAOC,EAAMG,OAAOC,U,0BAK9C,SAAaJ,GACTC,KAAKJ,MAAMgE,WAAW5D,KAAKH,MAAM2C,QAASxC,KAAKH,MAAM4C,KAAMzC,KAAKH,MAAM+C,OAAQ5C,KAAKH,MAAM8B,SACzF5B,EAAMM,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACP,GAAD,OAAW,EAAKQ,aAAaR,IAA7C,UACI,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,UAAf,qBACA,uBAAOC,KAAK,OAAOF,UAAU,eAAeV,KAAK,UAAUK,MAAOH,KAAKH,MAAM2C,QACtE7B,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,SAElD,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOF,UAAU,eAAeV,KAAK,OAAOK,MAAOH,KAAKH,MAAM4C,KACnE9B,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,SAGlD,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,SAAf,oBACA,wBAAQX,KAAK,SAASa,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,IAA7D,SACKC,KAAKJ,MAAMH,MAAMC,KAAI,SAAC2B,GAAD,OAAU,wBAAQlB,MAAOkB,EAAKI,GAApB,SAAyBJ,EAAKjC,mBAItE,sBAAKoB,UAAU,aAAf,UACI,uBAAOC,QAAQ,UAAf,qBACA,wBAAQX,KAAK,UAAUa,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,IAA9D,SACKC,KAAKJ,MAAMuC,SAASzC,KAAI,SAAC2B,GAAD,OAAU,wBAAQlB,MAAOkB,EAAKI,GAApB,SAAyBJ,EAAKvB,eAKzE,uBAAOY,KAAK,SAASP,MAAM,gB,GAtDpBU,IAAMC,WCiEd+C,E,kDAhEX,WAAYjE,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAMkE,EAAmBlE,EAAMuC,SAASiB,QAAO,SAACzB,GAAD,OAAaA,EAAQF,IAAM7B,EAAM6B,GAAGsC,MAAMC,OAAOvC,MAFjF,OAGf,EAAK5B,MAAQ,CACT4B,GAAIqC,EAAiB,GAAGrC,GACxB3B,KAAMgE,EAAiB,GAAGhE,KAC1BX,KAAM2E,EAAiB,GAAG3E,KAC1B6B,UAAW8C,EAAiB,GAAG9C,WAPpB,E,gDAWnB,SAAajB,GACTC,KAAKC,SAAL,eAESF,EAAMG,OAAOJ,KAAOC,EAAMG,OAAOC,U,iCAK9C,SAAoBJ,GAChB,GAAKA,EAAMG,OAAOe,gBAAlB,CAKA,IADA,IAAIxB,EAAQ,GACHyB,EAAI,EAAGA,EAAInB,EAAMG,OAAOe,gBAAgBE,OAAQD,IACrDzB,EAAM2B,KAAKrB,EAAMG,OAAOe,gBAAgBI,KAAKH,GAAGf,OAEpDH,KAAKC,SAAS,CAAC,KAAQR,SAPnBO,KAAKC,SAAS,CAAC,KAAQ,O,0BAU/B,SAAaF,GACTC,KAAKJ,MAAMqE,cAAcjE,KAAKH,MAAMC,KAAME,KAAKH,MAAMV,KAAMa,KAAKH,MAAMmB,UAAWhB,KAAKH,MAAM4B,IAC5F1B,EAAMM,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACP,GAAD,OAAW,EAAKQ,aAAaR,IAA7C,UACI,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,kBACA,uBAAOC,KAAK,OAAOF,UAAU,eAAeV,KAAK,OAAOK,MAAOH,KAAKH,MAAMC,KACnEa,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,SAGlD,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,wBAAQX,KAAK,OAAOyB,UAAQ,EAACZ,SAAU,SAACZ,GAAD,OAAW,EAAKyB,oBAAoBzB,IAA3E,SACKC,KAAKJ,MAAMH,MAAMC,KAAI,SAAC2B,GAAD,OAClB,wBAAQlB,MAAOkB,EAAKI,GAAIyC,SAAU,EAAKrE,MAAMV,KAAKgF,SAAS9C,EAAKI,IAAhE,SAAsEJ,EAAKjC,mBAIvF,sBAAKoB,UAAU,aAAf,UACI,uBAAOC,QAAQ,YAAf,kBACA,uBAAOC,KAAK,OAAOF,UAAU,eAAeV,KAAK,YAAYK,MAAOH,KAAKH,MAAMmB,UACxEL,SAAU,SAACZ,GAAD,OAAW,EAAKa,aAAab,SAElD,uBAAOW,KAAK,SAASP,MAAM,gB,GA3DXU,IAAMC,WCqQvBsD,E,kDAlPX,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT,MAAS,GACT,SAAY,GACZ,MAAS,GACT,MAAS,GACT,UAAa,IAPF,E,iDAWnB,SAAcwE,EAAOC,GAAY,IAAD,OACtBC,EAAU,IAAIC,IACpBD,EAAQE,IAAI,QAASJ,GACrBE,EAAQE,IAAI,YAAaH,GACzBtE,KAAKC,SAAS,CAAC,MAASoE,EAAO,UAAaC,IAAY,kBAAM,EAAKI,iB,qBAGvE,SAAQL,GACJ,QAASrE,KAAKH,MAAMwE,Q,oBAGxB,WACIrE,KAAK2E,cAAc,GAAI,M,wCAG3B,WAA8B,IAAD,OACnBJ,EAAU,IAAIC,IACdH,EAAQE,EAAQK,IAAI,SACpBN,EAAYC,EAAQK,IAAI,aAC9B5E,KAAKC,SAAS,CAAC,MAASoE,EAAO,UAAaC,IAAY,kBAAM,EAAKI,iB,2BAGvE,SAActF,EAAUmE,GAAW,IAAD,OAC9BsB,IAAMC,KAAK,wCAAyC,CAAC1F,SAAUA,EAAUmE,SAAUA,IAAWwB,MAC1F,SAAAC,GACI,EAAKL,cAAcK,EAASC,KAAT,MAAwB7F,MAGjD8F,OAAM,SAAAC,GAAK,OAAIC,MAAM,gJ,yBAG3B,WACI,IAAIC,EAAU,CACV,eAAgB,oBAKpB,OAHIrF,KAAKsF,YACLD,EAAO,cAAoB,SAAWrF,KAAKH,MAAMwE,OAE9CgB,I,+BAGX,WACIrF,KAAKuF,+B,2BAIT,SAAczF,EAAMX,EAAM6B,GAAY,IAAD,OAC3BqE,EAAUrF,KAAKwF,cACfP,EAAO,CAACnF,KAAMA,EAAMX,KAAMA,EAAM6B,UAAWA,GACjD6D,IAAMC,KAAN,sCAAkDG,EAAM,CAACI,YACpDN,MAAK,SAAAC,GACF,EAAKN,eACNQ,OAAM,SAAAC,GACLC,MAAM,kLACNK,QAAQC,IAAIP,Q,2BAIxB,SAAcrF,GAAO,IAAD,OAQVuF,EAAUrF,KAAKwF,cACrBX,IAAMD,IAAN,mDAAsD9E,GAAQ,CAACuF,YAC1DN,MAAK,SAAAC,GACF,EAAK/E,SAAS,CAAC,SAAY+E,EAASC,UACrCC,OAAM,SAAAC,GAAK,OAAIM,QAAQC,IAAIP,Q,2BAGtC,SAAcrF,EAAMX,EAAM6B,EAAWS,GAAK,IAAD,OAC/B4D,EAAUrF,KAAKwF,cACfP,EAAO,CAACnF,KAAMA,EAAMX,KAAMA,EAAM6B,UAAWA,GACjD6D,IAAMc,IAAN,6CAAgDlE,EAAhD,KAAuDwD,EAAM,CAACI,YACzDN,MAAK,SAAAC,GACF,EAAKN,eACNQ,OAAM,SAAAC,GACLC,MAAM,wLACNK,QAAQC,IAAIP,Q,wBAIxB,SAAW3C,EAASC,EAAMG,EAAQjB,GAAU,IAAD,OACjC0D,EAAUrF,KAAKwF,cACfP,EAAO,CAACzC,QAASA,EAASC,KAAMA,EAAMG,OAAQA,EAAQjB,QAASA,GACrEkD,IAAMC,KAAN,mCAA+CG,EAAM,CAACI,YACjDN,MAAK,SAAAC,GACF,EAAKN,eACNQ,OAAM,SAAAC,GACLC,MAAM,kLACNK,QAAQC,IAAIP,Q,2BAIxB,SAAc1D,GAAK,IAAD,OACR4D,EAAUrF,KAAKwF,cACrBX,IAAMe,OAAN,6CAAmDnE,EAAnD,KAA0D,CAAC4D,YAAUN,MAAK,SAAAC,GACtE,EAAKN,eACNQ,OAAM,SAAAC,GACDC,MAAM,kLACNK,QAAQC,IAAIP,Q,wBAKxB,SAAW1D,GAAK,IAAD,OACL4D,EAAUrF,KAAKwF,cACrBX,IAAMe,OAAN,0CAAgDnE,EAAhD,KAAuD,CAAC4D,YAAUN,MAAK,SAAAC,GACnE,EAAKN,eACNQ,OAAM,SAAAC,GACLC,MAAM,kLACNK,QAAQC,IAAIP,Q,uBAIpB,WAAa,IAAD,OACFE,EAAUrF,KAAKwF,cACrBX,IAAMD,IAAI,mCAAoC,CAACS,YAAUN,MACrD,SAAAC,GACI,IAAMvF,EAAQuF,EAASC,KACvB,EAAKhF,SACD,CACI,MAASR,OAIvByF,OAAM,SAAAC,GACJM,QAAQC,IAAIP,GACZ,EAAKlF,SAAS,CAACR,MAAO,QAG1BoF,IAAMD,IAAI,sCAAuC,CAACS,YAAUN,MACxD,SAAAC,GACI,IAAM7C,EAAW6C,EAASC,KAC1B,EAAKhF,SACD,CACI,SAAYkC,OAI1B+C,OAAM,SAAAC,GACJM,QAAQC,IAAIP,GACZ,EAAKlF,SAAS,CAACkC,SAAU,QAG7B0C,IAAMD,IAAI,mCAAoC,CAACS,YAAUN,MACrD,SAAAC,GACI,IAAMlC,EAAQkC,EAASC,KACvB,EAAKhF,SACD,CACI,MAAS6C,OAIvBoC,OAAM,SAAAC,GACJM,QAAQC,IAAIP,GACZ,EAAKlF,SAAS,CAAC6C,MAAO,U,oBAI9B,WAAU,IAAD,OACL,OACI,gCACI,eAAC,IAAD,WACI,+BACI,6BACI,cAAC,IAAD,CAAMjB,GAAG,IAAT,wFAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,YAAT,0DAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,SAAT,oDAEJ,6BACK7B,KAAKsF,UAAY,8BAAItF,KAAKH,MAAMyE,UACzB,wBAAQrC,QAAS,kBAAM,EAAK4D,UAA5B,+CAEJ,cAAC,IAAD,CAAMhE,GAAG,SAAT,2CAIZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,cAACC,EAAD,CAAUxG,MAAO,EAAKI,MAAMJ,WACnE,cAAC,IAAD,CAAOqG,OAAK,EAACC,KAAK,mBAAmBC,UAAW,kBAC5C,cAAC,EAAD,CAAavG,MAAO,EAAKI,MAAMJ,MAClB6B,cAAe,SAACxB,EAAMX,EAAM6B,GAAb,OAA2B,EAAKM,cAAcxB,EAAMX,EAAM6B,SAC1F,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,uBACXC,UAAW,SAACvE,GAAD,OACP,cAAC,EAAD,CAAmBhC,MAAO,EAAKI,MAAMJ,MAAO0C,SAAU,EAAKtC,MAAMsC,SAAUV,GAAIA,EAC5DwC,cAAe,SAACnE,EAAMX,EAAM6B,EAAWS,GAAxB,OAA+B,EAAKwC,cAAcnE,EAAMX,EAAM6B,EAAWS,SACtH,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,YAAYC,UAAW,kBACrC,cAAC,EAAD,CAAqBvG,MAAO,EAAKI,MAAMJ,MAClB0C,SAAU,EAAKtC,MAAMsC,SACrBP,cAAe,SAACH,GAAD,OAAQ,EAAKG,cAAcH,IAC1CrB,cAAe,SAACN,GAAD,OAAU,EAAKM,cAAcN,SAErE,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,gBAAgBC,UAAW,kBACzC,cAAC,EAAD,CAAUvG,MAAO,EAAKI,MAAMJ,MAAO0C,SAAU,EAAKtC,MAAMsC,SAC9CyB,WAAY,SAACpB,EAASC,EAAMG,EAAQjB,GAAxB,OAAoC,EAAKiC,WAAWpB,EAASC,EAAMG,EAAQjB,SACrG,cAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,SAASC,UAAW,kBAAM,cAAC,EAAD,CACxCvG,MAAO,EAAKI,MAAMJ,MAClB0C,SAAU,EAAKtC,MAAMsC,SACrBW,MAAO,EAAKjD,MAAMiD,MAClBP,WAAY,SAACd,GAAD,OAAQ,EAAKc,WAAWd,SACxC,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,SAASC,UAAW,kBAAM,cAAC,EAAD,CAAWxC,cAAe,SAACpE,EAAUmE,GAAX,OAClE,EAAKC,cAAcpE,EAAUmE,SACjC,cAAC,IAAD,CAAOwC,KAAK,eAAZ,SACI,cAACG,EAAD,CAAkBzG,MAAOO,KAAKH,MAAMJ,MAClB0C,SAAUnC,KAAKH,MAAMsC,SACrBW,MAAO9C,KAAKH,MAAMiD,MAClBP,WAAY,SAACd,GAAD,OAAQ,EAAKc,WAAWd,QAE1D,cAAC,IAAD,CAAUI,GAAG,IAAIsE,KAAK,WAGtB,cAAC,IAAD,CAAOH,UAAWhD,UAM1B,cAAC,EAAD,W,GA7OEnC,IAAMC,WCTTsF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e26be6e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport App from \"../App\";\n\nconst UserItem = ({user}) => {\n    return (\n        <tr>\n            <td>{ user.username }</td>\n            <td>{ user.email }</td>\n            <td>{ user.first_name }</td>\n            <td>{ user.last_name }</td>\n        </tr>\n    )\n}\nconst UserList = ({users}) => {\n\n    return (\n        <table>\n            <th> User name </th>\n            <th> Email </th>\n            <th> First name </th>\n            <th> Last name </th>\n            {users.map((user) => < UserItem user = {user} />)}\n        </table>\n    )\n}\n\nexport default UserList;","import React from 'react'\nimport ProjectList from \"./Project\";\n\n\nclass FilterProjectForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        );\n    }\n\n    handleSubmit(event) {\n        this.props.filterProject(this.state.name)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(event) => this.handleSubmit(event)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">name</label>\n                        <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name}\n                               onChange={(event) => this.handleChange(event)}/>\n                    </div>\n                    <input type=\"submit\" value=\"Filter\"/>\n                </form>\n                {/*<ProjectList projects={this.state.projects} deleteProject={(id) => this.deleteProject(id)}/>*/}\n            </div>\n        );\n    }\n}\n\nexport default FilterProjectForm","import React from 'react'\n\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            user: [],\n            repo_link: ''\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        );\n    }\n    handleProjectChange(event) {\n        if (!event.target.selectedOptions) {\n            this.setState({'user': []})\n            return;\n        }\n        let users = []\n        // const opt = event.target.selectedOptions\n        // const showSelectedOptions = opt => console.log([...opt].filter(o => o.selected).map(o => o.value()))\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\n            users.push(event.target.selectedOptions.item(i).value)\n        }\n        this.setState({'user': users})\n    }\n\n    handleSubmit(event) {\n        this.props.createProject(this.state.name, this.state.user, this.state.repo_link)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"login\">name</label>\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"user\">user</label>\n                    <select name=\"user\" multiple onChange={(event) => this.handleProjectChange(event)}>\n                        {this.props.users.map((item) => <option value={item.id}>{item.username}</option>)}\n                    </select>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"repo_link\">link</label>\n                    <input type=\"text\" className=\"form-control\" name=\"repo_link\" value={this.state.repo_link}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n                <input type=\"submit\" value=\"Save\"/>\n            </form>\n        );\n    }\n}\n\nexport default ProjectForm","import React from \"react\";\nimport App from \"../App\";\nimport {Link} from \"react-router-dom\";\nimport FilterProjectForm from \"./FilterProjectForm\";\nimport ProjectForm from \"./ProjectForm\";\n\n\nconst ProjectItem = ({users, project, deleteProject}) => {\n    return (\n        <tr>\n            <td>\n                <Link to={{pathname:`/project/${project.id}`}}> {project.name} </Link>\n            </td>\n            <td>{project.user.map((user_id) =>{ return users.find((user) => user.id == user_id).username })}</td>\n            <td>{project.repo_link}</td>\n            <td>\n                <button onClick={() => deleteProject(project.id)} type='button'>Delete</button>\n            </td>\n            <td>\n                <Link to={{pathname:`/projects/update/${project.id}`}}>Update</Link>\n            </td>\n        </tr>\n    )\n}\nconst ProjectList = ({users, projects, deleteProject}) => {\n\n    return (\n        <div>\n            <table>\n                <th> Project name</th>\n                <th> User</th>\n                <th> Link</th>\n                <th></th>\n                {projects.map((project) => <ProjectItem  users={users} project={project}\n                                                        deleteProject={deleteProject}/>)}\n            </table>\n            <Link to='/projects/create'>Create</Link>\n\n        </div>\n    )\n}\n\nconst FilteredProjectList = ({users, projects, deleteProject, filterProject}) => {\n\n    return (\n        <div>\n            <FilterProjectForm filterProject={(name) => filterProject(name)}/>\n            <ProjectList users={users} projects={projects} deleteProject={deleteProject}/>\n        </div>\n    )\n}\n\nexport default FilteredProjectList;","import React from \"react\";\n\nconst TodoItem = ({users, projects, todo, deleteTodo}) => {\n    return (\n        <tr>\n            <td>{todo.caption}</td>\n            <td>{todo.text}</td>\n            <td>{projects.find((project) => project.id == todo.project).name}</td>\n            <td>{todo.created}</td>\n            <td>{todo.updated}</td>\n            <td>{users.find((user) => user.id == todo.author).username}</td>\n            <td>{todo.state}</td>\n            <td>\n                { todo.state !== 'CLS' &&\n                    <button onClick={() => deleteTodo(todo.id)} type='button'>Delete</button>\n                }\n            </td>\n\n        </tr>\n    )\n}\n\nexport default TodoItem;","import React from \"react\";\nimport App from \"../App\";\nimport TodoItem from \"./TodoItem\";\nimport {Link} from \"react-router-dom\";\n\n\nconst TodoList = ({users, projects, todos, deleteTodo}) => {\n\n    return (\n        <div>\n            <table>\n                <th> Caption</th>\n                <th> Text</th>\n                <th> Project</th>\n                <th> Creation date</th>\n                <th> Last update</th>\n                <th> Author</th>\n                <th> State</th>\n                <th></th>\n                {todos.map((todo) => <TodoItem users={users} projects={projects} todo={todo} deleteTodo={deleteTodo}/>)}\n            </table>\n            <Link to='/todos/create'>Create</Link>\n        </div>\n    )\n}\n\nexport default TodoList;","import React from \"react\";\n\n\nconst Footer  = ({}) => {\n    return (\n        <ul>\n            <li>Все права защищены</li>\n        </ul>\n    )\n};\n\nexport default Footer;","\nconst NotFound = ({}) => {\n    return (\n        <div>\n            <h2>Страница не найдена</h2>\n        </div>\n    )\n}\n\nexport default NotFound;","import {useParams} from \"react-router-dom\";\nimport React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\n\nconst ProjectTodosList = ({users, projects, todos, deleteTodo}) => {\n\n    let {id} = useParams();\n    let filtered_todos = todos.filter(todo => todo.project == id)\n    return (\n        <table>\n            <th> Caption</th>\n            <th> Text</th>\n            <th> Project</th>\n\n            <th> Creation date</th>\n            <th> Last update</th>\n            <th> Author</th>\n            <th> State</th>\n            {filtered_todos.map((todo) => <TodoItem  users={users} projects={projects} todo={todo} deleteTodo={deleteTodo}/>)}\n        </table>\n    )\n\n}\n\nexport default ProjectTodosList","import React from \"react\";\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: '',\n            password: '',\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        );\n    }\n\n    handleSubmit(event) {\n        // console.log(this.state.login + ' ' + this.state.password)\n        this.props.get_auth_data(this.state.login, this.state.password)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)} method=\"post\">\n                <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\n                       onChange={(event) => this.handleChange(event)}/>\n                <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\n                       onChange={(event) => this.handleChange(event)}/>\n                <input type=\"submit\" value=\"Login\"/>\n            </form>\n        );\n    }\n\n\n}\n\nexport default LoginForm","import React from 'react'\n\n\nclass TodoForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            caption: '',\n            author: props.users[0].id,\n            text: '',\n            project: props.projects[0].id,\n        }\n    }\n\n    handleChange(event) {\n        // console.log('change', event.target.name, event.target.value)\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        );\n    }\n\n    handleSubmit(event) {\n        this.props.createTodo(this.state.caption, this.state.text, this.state.author, this.state.project)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"caption\">caption</label>\n                    <input type=\"text\" className=\"form-control\" name=\"caption\" value={this.state.caption}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"text\">text</label>\n                    <input type=\"text\" className=\"form-control\" name=\"text\" value={this.state.text}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"author\">author</label>\n                    <select name=\"author\" onChange={(event) => this.handleChange(event)}>\n                        {this.props.users.map((item) => <option value={item.id}>{item.username}</option>)}\n                    </select>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"project\">project</label>\n                    <select name=\"project\" onChange={(event) => this.handleChange(event)}>\n                        {this.props.projects.map((item) => <option value={item.id}>{item.name}</option>)}\n                    </select>\n                </div>\n\n\n                <input type=\"submit\" value=\"Save\"/>\n            </form>\n        );\n    }\n}\n\nexport default TodoForm","import React from 'react'\n\n\nclass ProjectUpdateForm extends React.Component {\n    constructor(props) {\n        super(props)\n        const selected_project = props.projects.filter((project) => project.id == props.id.match.params.id)\n        this.state = {\n            id: selected_project[0].id,\n            name: selected_project[0].name,\n            user: selected_project[0].user,\n            repo_link: selected_project[0].repo_link\n        }\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        );\n    }\n\n    handleProjectChange(event) {\n        if (!event.target.selectedOptions) {\n            this.setState({'user': []})\n            return;\n        }\n        let users = []\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\n            users.push(event.target.selectedOptions.item(i).value)\n        }\n        this.setState({'user': users})\n    }\n\n    handleSubmit(event) {\n        this.props.updateProject(this.state.name, this.state.user, this.state.repo_link, this.state.id)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"login\">name</label>\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"user\">user</label>\n                    <select name=\"user\" multiple onChange={(event) => this.handleProjectChange(event)}>\n                        {this.props.users.map((item) =>\n                            <option value={item.id} selected={this.state.user.includes(item.id)}>{item.username}</option>)}\n                    </select>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"repo_link\">link</label>\n                    <input type=\"text\" className=\"form-control\" name=\"repo_link\" value={this.state.repo_link}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n                <input type=\"submit\" value=\"Save\"/>\n            </form>\n        );\n    }\n}\n\nexport default ProjectUpdateForm","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie/es6\";\nimport UserList from \"./components/User\";\nimport Menu from \"./components/Menu\";\nimport Footer from \"./components/Footer\";\nimport {HashRouter, Link, Route, Switch, Redirect} from \"react-router-dom\";\nimport ProjectList from \"./components/Project\";\nimport TodoList from \"./components/TodoList\";\nimport NotFound from \"./components/NotFound\";\nimport ProjectTodosList from \"./components/ProjectTodos\";\nimport LoginForm from \"./components/LoginForm\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport TodoForm from \"./components/TodoForm\";\nimport FilterProjectForm from \"./components/FilterProjectForm\";\nimport FilteredProjectList from \"./components/Project\";\nimport ProjectUpdateForm from \"./components/ProjectUpdateForm\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'users': [],\n            'projects': [],\n            'todos': [],\n            'token': '',\n            'user_name': ''\n        };\n    }\n\n    set_auth_data(token, user_name) {\n        const cookies = new Cookies()\n        cookies.set('token', token)\n        cookies.set('user_name', user_name)\n        this.setState({'token': token, 'user_name': user_name}, () => this.load_data())\n    }\n\n    is_auth(token) {\n        return !!this.state.token\n    }\n\n    logout() {\n        this.set_auth_data('', '')\n    }\n\n    get_auth_data_from_storage() {\n        const cookies = new Cookies()\n        const token = cookies.get('token')\n        const user_name = cookies.get('user_name')\n        this.setState({'token': token, 'user_name': user_name}, () => this.load_data())\n    }\n\n    get_auth_data(username, password) {\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {username: username, password: password}).then(\n            response => {\n                this.set_auth_data(response.data['token'], username)\n                // console.log(response.data)\n            }\n        ).catch(error => alert('Неверный логин или пароль'))\n    }\n\n    get_headers() {\n        let headers = {\n            'Content-Type': 'application/json'\n        }\n        if (this.is_auth()) {\n            headers['Authorization'] = 'Token ' + this.state.token\n        }\n        return headers\n    }\n\n    componentDidMount() {\n        this.get_auth_data_from_storage()\n        // this.load_data()\n    }\n\n    createProject(name, user, repo_link) {\n        const headers = this.get_headers()\n        const data = {name: name, user: user, repo_link: repo_link}\n        axios.post(`http://127.0.0.1:8000/api/projects/`, data, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n                alert('Ошибка! Не удалось создать проект.')\n                console.log(error)\n        })\n    }\n\n    filterProject(name) {\n        // let result=[];\n        // this.state.projects.forEach( i => {\n        //     if (i.name.indexOf(name) !== -1)\n        //         result.push(i)\n        // })\n        // this.setState({'projects': result})\n\n        const headers = this.get_headers()\n        axios.get(`http://127.0.0.1:8000/api/projects/?name=${name}`, {headers})\n            .then(response => {\n                this.setState({'projects': response.data})\n            }).catch(error => console.log(error))\n    }\n\n    updateProject(name, user, repo_link, id) {\n        const headers = this.get_headers()\n        const data = {name: name, user: user, repo_link: repo_link}\n        axios.put(`http://127.0.0.1:8000/api/projects/${id}/`, data, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n                alert('Ошибка! Не удалось обновить проект.')\n                console.log(error)\n        })\n    }\n\n    createTodo(caption, text, author, project) {\n        const headers = this.get_headers()\n        const data = {caption: caption, text: text, author: author, project: project}\n        axios.post(`http://127.0.0.1:8000/api/todos/`, data, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n                alert('Ошибка! Не удалось создать задачу.')\n                console.log(error)\n        })\n    }\n\n    deleteProject(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/projects/${id}/`, {headers}).then(response => {\n            this.load_data()\n        }).catch(error => {\n                alert('Ошибка! Не удалось удалить проект.')\n                console.log(error)\n            }\n        )\n    }\n\n    deleteTodo(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/todos/${id}/`, {headers}).then(response => {\n            this.load_data()\n        }).catch(error => {\n            alert('Ошибка! Не удалось удалить задачу.')\n            console.log(error)\n        })\n    }\n\n    load_data() {\n        const headers = this.get_headers()\n        axios.get('http://127.0.0.1:8000/api/users/', {headers}).then(\n            response => {\n                const users = response.data\n                this.setState(\n                    {\n                        'users': users\n                    }\n                )\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({users: []})\n        })\n\n        axios.get('http://127.0.0.1:8000/api/projects/', {headers}).then(\n            response => {\n                const projects = response.data\n                this.setState(\n                    {\n                        'projects': projects\n                    }\n                )\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({projects: []})\n        })\n\n        axios.get('http://127.0.0.1:8000/api/todos/', {headers}).then(\n            response => {\n                const todos = response.data\n                this.setState(\n                    {\n                        'todos': todos\n                    }\n                )\n            }\n        ).catch(error => {\n            console.log(error)\n            this.setState({todos: []})\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <HashRouter>\n                    <ul>\n                        <li>\n                            <Link to='/'>Пользователи</Link>\n                        </li>\n                        <li>\n                            <Link to='/projects'>Проекты</Link>\n                        </li>\n                        <li>\n                            <Link to='/todos'>Задачи</Link>\n                        </li>\n                        <li>\n                            {this.is_auth() ? <p>{this.state.user_name}\n                                    <button onClick={() => this.logout()}>Выход</button>\n                                </p> :\n                                <Link to='/login'>Вход</Link>}\n                        </li>\n                    </ul>\n\n                    <Switch>\n                        <Route exact path='/' component={() => <UserList users={this.state.users}/>}/>\n                        <Route exact path='/projects/create' component={() =>\n                            <ProjectForm users={this.state.users}\n                                         createProject={(name, user, repo_link) => this.createProject(name, user, repo_link)}/>}/>\n                        <Route exact path='/projects/update/:id'\n                               component={(id) =>\n                                   <ProjectUpdateForm users={this.state.users} projects={this.state.projects} id={id}\n                                                      updateProject={(name, user, repo_link, id) => this.updateProject(name, user, repo_link, id)}/>}/>\n                        <Route exact path='/projects' component={() =>\n                            <FilteredProjectList users={this.state.users}\n                                                 projects={this.state.projects}\n                                                 deleteProject={(id) => this.deleteProject(id)}\n                                                 filterProject={(name) => this.filterProject(name)}/>\n                        }/>\n                        <Route exact path='/todos/create' component={() =>\n                            <TodoForm users={this.state.users} projects={this.state.projects}\n                                      createTodo={(caption, text, author, project) => this.createTodo(caption, text, author, project)}/>}/>\n                        <Route exact path='/todos' component={() => <TodoList\n                            users={this.state.users}\n                            projects={this.state.projects}\n                            todos={this.state.todos}\n                            deleteTodo={(id) => this.deleteTodo(id)}/>}/>\n                        <Route exact path='/login' component={() => <LoginForm get_auth_data={(username, password) =>\n                            this.get_auth_data(username, password)}/>}/>\n                        <Route path='/project/:id'>\n                            <ProjectTodosList users={this.state.users}\n                                              projects={this.state.projects}\n                                              todos={this.state.todos}\n                                              deleteTodo={(id) => this.deleteTodo(id)}/>\n                        </Route>\n                        <Redirect to='/' from='/users'/>\n\n\n                        <Route component={NotFound}/>\n\n                    </Switch>\n\n                </HashRouter>\n\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}